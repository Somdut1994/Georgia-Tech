ca_delays=[[25.58080808080808, 26.68411867364747, 26.469135802469136, 26.385416666666668, 26.31282051282051, 26.975778546712803, 25.032367972742758, 26.5893470790378, 25.989455184534272, 25.763793103448275], [0.0, 0.0, 0.0, 0.1875, 0.0, 0.7577854671280276, 0.0, 0.2869415807560137, 0.0, 0.0], [0.02861952861952862, 0.06806282722513089, 0.054673721340388004, 0.07291666666666667, 0.05811965811965812, 0.058823529411764705, 0.05110732538330494, 0.07388316151202749, 0.08084358523725835, 0.06206896551724138], [5.14983164983165, 4.647469458987784, 5.8236331569664905, 3.7847222222222223, 4.543589743589743, 4.205882352941177, 4.424190800681431, 3.3470790378006874, 3.5676625659050965, 3.0120689655172415]]
delay_e=[21.739636163631122, 0.657596950020793, 0.6318510077150495, 4.368673932984429, 20.425873329961473, 0.6989746365769556, 0.5940372424863712, 4.360602587360545, 24.002571644458843, 0.6252530500209291, 0.4858604042996848, 6.421152089790679, 26.146962557787766, 0.8467133986573547, 0.4754786952564102, 2.8448719873882307, 24.87059028580646, 0.6404859632152778, 0.5655445343312944, 4.020287501146207, 24.321094253037874, 0.7369113947522326, 0.6404657764473234, 5.318029317452754, 18.68854571599982, 0.46838407993334086, 0.38141326498425626, 6.605225776230964, 17.738187343421362, 0.44387392415809335, 0.4333380546249739, 3.6350807327290586, 25.714863238259692, 0.9779504798807038, 0.6337331004876487, 4.430749785507797, 26.158431361414888, 0.8126727742180975, 0.7183663677879214, 4.892136439569234]
delay_a=[22.30380953860226, 0.9144230107311391, 0.5511254484755519, 2.938409420747555, 20.564442062318935, 0.6077957743420268, 0.6448470789628451, 4.776888529705122, 20.292948060151097, 0.5304793910140837, 0.5287206097892809, 5.389698530519038, 23.12734606085175, 0.5382641169431425, 0.4986898637513501, 4.704336573321083, 24.62447014059805, 0.568640603481742, 0.5176532982253489, 2.7654437724252694, 24.263155074202558, 0.7422844663911886, 0.6793939867286494, 4.694472193028301, 18.109197969517005, 0.9209952561291872, 0.5461396691526207, 4.3691616015584005, 22.8661550688326, 0.5084995448920882, 0.5891250634118382, 3.7753380253564455, 26.278015688864272, 0.7819361116163965, 0.7343966464868921, 3.169202457132469, 22.069630088972072, 0.7872139667004474, 0.4850875205671938, 2.622984154851065]

delays_e=[[], [], [], []]
delays_a=[[], [], [], []]
for i in range(10):
	for j in range(4):
		delays_e[j].append(delay_e[i*4+j])
		delays_a[j].append(delay_a[i*4+j])

servers=['10th St', '11th St', '12th St', '14th St']

def adjustFigAspect(fig,aspect=1):
    '''
    Adjust the subplot parameters so that the figure has the correct
    aspect ratio.
    '''
    xsize,ysize = fig.get_size_inches()
    minsize = min(xsize,ysize)
    xlim = .4*minsize/xsize
    ylim = .4*minsize/ysize
    if aspect < 1:
        xlim *= aspect
    else:
        ylim /= aspect
    fig.subplots_adjust(left=.5-xlim,
                        right=.5+xlim,
                        bottom=.5-ylim,
                        top=.5+ylim)

import matplotlib.pyplot as plt

n=0
for i in servers:
	fig=plt.figure()
	plt.boxplot([delays_e[n], delays_a[n], ca_delays[n]])
	adjustFigAspect(fig,aspect=.5)
	plt.title('Delay Comparison: '+i)
	plt.xticks((1, 2, 3), ['Event', 'Activity', 'CA model'])
	plt.ylim([0, 1.1*max(max(delays_e[n]), max(delays_a[n]), max(ca_delays[n]))])
	plt.ylabel('Average Delay[s]')
	plt.xlabel('Approaches')
	plt.savefig('CA_Delay_'+i+'.png', bbox_inches='tight', dpi=600)
	plt.clf()
	plt.close()
	n+=1
